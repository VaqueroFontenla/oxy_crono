{"version":3,"sources":["core/mapper.js","core/service.js","ui/assets/js/calculate.js","ui/components/Button.js","ui/components/Clock.js","ui/components/grid/Col.js","ui/components/grid/Row.js","ui/components/Form.js","ui/components/Modal.js","ui/components/Alert.js","ui/assets/js/sorter.js","ui/components/Filter.js","ui/components/CountDown.js","ui/components/Table.js","ui/components/Help.js","ui/components/HelpIcon.js","ui/views/App.styles.js","ui/views/App.js","serviceWorker.js","index.js"],"names":["mapFormToApi","values","flow","name","volume","bed","press","start","parseInt","moment","format","url","getAllRecords","a","axios","response","status","data","console","log","getRecord","id","addRecord","post","mapper","deleteRecord","delete","updateRecord","put","calculate","map","item","key","hoursDuration","minutesDuration","duration","hour","minute","endHour","add","formattedEndHour","finish","remaining","Button","children","type","size","onClick","Clock","useState","forceUpdate","useEffect","setTimeout","Container","styled","div","Col","span","flex","xl","lg","md","xs","Row","justify","align","gutter","FormPatient","form","layout","setFieldsValue","undefined","Item","label","valuePropName","value","placeholder","Modal","visible","onCreate","onUpdate","onCancel","Form","useForm","title","okText","cancelText","onOk","validateFields","then","resetFields","catch","info","Alert","onDelete","sortByName","b","aString","toLowerCase","bString","sortByBed","sortByStartTime","unix","sortByRemainingTime","Filter","currentFilterValue","onChangeFilter","onChange","allowClear","GreenContainer","YellowContainer","RedContainer","stylesCountDown","fontWeight","fontSize","Table","dataSource","editRecord","currentFilterValueName","onChangeFilterName","currentFilterValueBed","onChangeFilterBed","COLUMNS","dataIndex","sorter","sortBy","filterDropdown","filterIcon","filtered","SearchOutlined","style","color","defaultSortOrder","render","record","Countdown","Statistic","onFinish","valueStyle","CountdownCell","ActionsContainer","columns","Help","Title","footer","width","closable","Wrapper","Footer","HelpIcon","QuestionOutlined","App","setData","filteredData","setFilteredData","recordInfo","setRecordInfo","idDelete","setIdDelete","idUpdate","setIdUpdate","isModalOpen","toggleModalOpen","isModalHelp","toggleModalHelp","isAlertOpen","toggleAlertOpen","setCurrentFilterValueName","setCurrentFilterValueBed","intervalId","setInterval","loadRecords","clearInterval","filterData","filter","entry","includes","length","openModal","closeModal","closeAlert","e","target","service","result","calculateData","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onSuccess","error","ReactDOM","locale","esES","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.40e6263e.chunk.js","sourcesContent":["import moment from \"moment\";\n\nexport const mapFormToApi = (values) => {\n    const data= {\n        flow: values.flow,\n        name: values.name,\n        volume: values.volume,\n        bed: values.bed,\n        press: values.press,\n        start: parseInt(moment(values.start).format('x')),\n      }\n      return data\n}","import axios from \"axios\";\nimport * as mapper from \"./mapper\";\n\nconst url = \"https://us-central1-fir-first-app-1156c.cloudfunctions.net/beds\";\n\nexport const getAllRecords = async () => {\n  try {\n    const response = await axios(url);\n    if (response.status === 200) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getRecord = async (id) => {\n  try {;\n    const response = await axios(`${url}/bed/${id}`);\n    if (response.status === 200) {\n      return response.data;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const addRecord = async (values) => {  \n  try {\n    const response = await axios.post(\n      `${url}/add/`,\n      mapper.mapFormToApi(values)\n    );\n    if (response.status === 201) {\n      console.log(\n        \"El nuevo registro ha sido almacenado con id: \" + response.data.id\n      );\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteRecord = async (id) => {  \n  try {\n    const response = await axios.delete(\n      `${url}/delete/${id}`,\n    );\n    if (response.status === 200) {\n      console.log(\n        \"El registro ha sido eliminado \"\n      );\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateRecord = async ( id, values) => {  \n  try {\n    const response = await axios.put(\n      `${url}/update/${id}`,\n      mapper.mapFormToApi(values)\n    );\n    if (response.status === 201) {\n      console.log(\n        \"El registro ha sido actualizado\"\n      );\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import moment from \"moment\";\n\nexport const calculate = (data) => {\n  const calculateData = data.map((item, key) => {\n    //Calculate Duration\n    const hoursDuration = parseInt((item.press * item.volume) / item.flow / 60);\n    const minutesDuration = ((item.press * item.volume) / item.flow) % 60;\n    const duration = moment({\n      hour: hoursDuration,\n      minute: minutesDuration,\n    }).format(\"HH:mm\");\n\n    //Calculate End Hour\n    const endHour = moment(item.start)\n      .add(hoursDuration, \"hours\")\n      .add(minutesDuration, \"minutes\");\n    const formattedEndHour = endHour.format(\"HH:mm\");\n\n    return {\n      ...item,\n      start: moment(item.start).format(\"HH:mm\"),\n      duration: duration,\n      finish: formattedEndHour,\n      remaining: endHour,\n    };\n  });\n\n  return calculateData\n};\n","import { Button as ADButton } from \"antd\";\nimport React from \"react\";\n\nexport const Button = ({ children, type, size, onClick }) => {\n  return (\n    <ADButton type={type} onClick={onClick} size={size}>\n      {children}\n    </ADButton>\n  );\n};\n","import React,{ useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport styled from \"styled-components\";\n\nexport const Clock = () => {\n  const [, forceUpdate] = useState();\n  useEffect(() => {\n    setTimeout(forceUpdate, 60000);\n  }, []);\n  return <Container>{moment().format(\"LT\")}</Container>;\n};\n\nconst Container = styled.div`\n  height: 50px;\n  width: 200px;\n  color: #1890ff;\n  text-align: center;\n  line-height: 50px;\n  font-size: 24px;\n  border: solid 2px #1890ff;\n  border-radius: 5px;\n`;\n","import React from 'react'\nimport { Col as ADCol } from 'antd'\n\nexport const Col = ({ children, span, flex }) => (\n  <ADCol xl={span} lg={8} md={12} xs={24} flex={flex}>\n    {children}\n  </ADCol>\n)\n","import { Row as ADRow } from 'antd';\nimport React from 'react';\n\n\nexport const Row = ({ justify, children }) => (\n  <ADRow justify={justify} align=\"middle\" gutter={[12, 12]}>\n    {children}\n  </ADRow>\n)\n\n","import { Form, Input, InputNumber, TimePicker } from \"antd\";\nimport moment from \"moment\";\nimport React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Col } from \"./grid/Col\";\nimport { Row } from \"./grid/Row\";\n\nexport const FormPatient = ({ form, layout, data }) => {\n\n  useEffect(() => {\n    form.setFieldsValue({\n      name: data ? data.name : undefined,\n      bed: data ? data.bed : undefined,\n      start: data ? moment(data.start) : undefined,\n      press: data ? data.press : undefined,\n      volume: data ? data.volume : undefined,\n      flow: data ? data.flow : undefined,\n    });\n  }, [form, data]);\n\n  return (\n    <Form form={form} layout={layout}>\n      <Container>\n        <Row>\n          <Col span={24}>\n            <Form.Item name=\"name\" label=\"Nombre\" valuePropName={form.name}>\n              <Input />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row justify=\"space-between\">\n          <Col span={8}>\n            <Form.Item name=\"bed\" label=\"Nº cama\" value={form.bed}>\n              <InputNumber />\n            </Form.Item>\n          </Col>\n          <Col span={16}>\n            <Form.Item\n              name=\"start\"\n              label=\"Hora de inicio\"\n              value={form.start}\n            >\n              <TimePicker format={\"HH:mm\"} placeholder=\"Seleccione la hora\" />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={8}>\n            <Form.Item name=\"press\" label=\"Presión (bar)\" value={form.press}>\n              <InputNumber />\n            </Form.Item>\n          </Col>\n          <Col span={8}>\n            <Form.Item name=\"volume\" label=\"Volumen (l)\" value={form.volume}>\n              <InputNumber />\n            </Form.Item>\n          </Col>\n          <Col span={8}>\n            <Form.Item name=\"flow\" label=\"Caudal (m/l)\" value={form.flow}>\n              <InputNumber />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Container>\n    </Form>\n  );\n};\n\nconst Container = styled.div`\n  padding: 12px;\n`;\n\n\n","import { Form, Modal as ADModal } from \"antd\";\nimport React from \"react\";\nimport { FormPatient } from \"./Form\";\n\nexport const Modal = ({ visible, onCreate, onUpdate, onCancel, data }) => {\n  const [form] = Form.useForm();\n\n  return (\n    <ADModal\n      title=\"Añadir paciente\"\n      visible={visible}\n      okText= {data ? \"Actualizar\": \"Guardar\"}\n      cancelText=\"Cancelar\"\n      onCancel={onCancel}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            form.resetFields();\n            data ? onUpdate(values) : onCreate(values);\n          })\n          .catch((info) => {\n            console.log(\"Validate Failed:\", info);\n          });\n      }}\n    >\n      <FormPatient form={form} layout=\"vertical\" data={data}/>\n    </ADModal>\n  );\n};\n","import { Modal as ADModal } from \"antd\";\nimport React from \"react\";\n\nexport const Alert = ({ visible, onDelete, onCancel }) => {\n\n  return (\n    <ADModal\n      title=\"Añadir paciente\"\n      visible={visible}\n      okText=\"Eliminar\"\n      cancelText=\"Cancelar\"\n      onCancel={onCancel}\n      onOk={onDelete}\n    >\n      ¿Estás seguro que quieres eliminar este registro?\n    </ADModal>\n  );\n};\n","import moment from \"moment\";\n\nexport const sortByName = (a, b) => {\n  const aString = a.name.toLowerCase();\n  const bString = b.name.toLowerCase();\n  if (aString < bString) {\n    return -1;\n  } else if (aString > bString) {\n    return 1;\n  } else {\n    return 0;\n  }\n};\n\nexport const sortByBed = (a, b) => a.bed - b.bed;\n\nexport const sortByStartTime = (a, b) =>\n  moment(a.start, \"HH:mm\").unix() - moment(b.start, \"HH:mm\").unix();\n\nexport const sortByRemainingTime = (a, b) => {\n  const calculate = (item) => {\n    return moment(item.remaining, \"x\").format('x')\n  };\n  return calculate(a) - calculate(b);\n};\n","import { Input } from \"antd\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nexport const Filter = ({ currentFilterValue, onChangeFilter }) => {\n  return (\n    <Input\n      placeholder=\"Search Name\"\n      value={currentFilterValue}\n      onChange={onChangeFilter}\n      allowClear={true}\n    />\n  );\n};\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n","import { Statistic } from \"antd\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nexport const CountdownCell = (record) => {\n  const { Countdown } = Statistic;\n\n  const DEADLINE_DANGER = 7200000;\n  const DEADLINE_MOD = 10800000;\n\n  function onFinish() {\n    console.log(\"finished!\");\n  }\n  const remaining = record - moment();\n  if (moment(remaining, \"x\") < DEADLINE_DANGER) {\n    return (\n      <RedContainer>\n        <Countdown\n          valueStyle={stylesCountDown}\n          value={record}\n          onFinish={onFinish}\n        />\n      </RedContainer>\n    );\n  }\n  if (\n    DEADLINE_DANGER < moment(remaining, \"x\") &&\n    moment(remaining, \"x\") < DEADLINE_MOD\n  ) {\n    return (\n      <YellowContainer>\n        <Countdown\n          valueStyle={stylesCountDown}\n          value={record}\n          onFinish={onFinish}\n        />\n      </YellowContainer>\n    );\n  }\n  if (moment(remaining, \"x\") > DEADLINE_MOD) {\n    return (\n      <GreenContainer>\n        <Countdown\n          valueStyle={stylesCountDown}\n          value={record}\n          onFinish={onFinish}\n        />\n      </GreenContainer>\n    );\n  }\n};\nconst GreenContainer = styled.div`\n  background-color: #00ff0080;\n  padding: 6px;\n  border-radius: 4px;\n`;\nconst YellowContainer = styled.div`\n  background-color: #ffff0080;\n  padding: 6px;\n  border-radius: 4px;\n`;\nconst RedContainer = styled.div`\n  background-color: #ff4d4f80;\n  padding: 6px;\n  border-radius: 4px;\n`;\n\nconst stylesCountDown = {\n  fontWeight: \"bold\",\n  fontSize: 14,\n};\n","import { Table as ADTable } from \"antd\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport * as sortBy from \"../assets/js/sorter\";\nimport { Button } from \"./Button\";\nimport { Filter } from \"./Filter\";\nimport { CountdownCell } from \"./CountDown\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nexport const Table = ({\n  dataSource,\n  editRecord,\n  deleteRecord,\n  currentFilterValueName,\n  onChangeFilterName,\n  currentFilterValueBed,\n  onChangeFilterBed,\n}) => {\n  const COLUMNS = [\n    {\n      title: \"Nombre\",\n      dataIndex: \"name\",\n      key: \"name\",\n      sorter: sortBy.sortByName,\n      filterDropdown: (\n        <Filter\n          onChangeFilter={onChangeFilterName}\n          currentFilterValue={currentFilterValueName}\n        />\n      ),\n      filterIcon: (filtered) => (\n        <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n      ),\n    },\n    {\n      title: \"Nº cama\",\n      dataIndex: \"bed\",\n      key: \"bed\",\n      align: \"center\",\n      sorter: sortBy.sortByBed,\n      filterDropdown: (\n        <Filter\n          onChangeFilter={onChangeFilterBed}\n          currentFilterValue={currentFilterValueBed}\n        />\n      ),\n      filterIcon: (filtered) => (\n        <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n      ),\n    },\n    {\n      title: \"Inicio\",\n      dataIndex: \"start\",\n      key: \"start\",\n      sorter: sortBy.sortByStartTime,\n    },\n    {\n      title: \"Presion (bar)\",\n      dataIndex: \"press\",\n      key: \"press\",\n      align: \"center\",\n    },\n    {\n      title: \"Volumen (l)\",\n      dataIndex: \"volume\",\n      key: \"volume\",\n      align: \"center\",\n    },\n    {\n      title: \"Caudal (l/m)\",\n      dataIndex: \"flow\",\n      key: \"flow\",\n      align: \"center\",\n    },\n    {\n      title: \"Duración (h)\",\n      dataIndex: \"duration\",\n      key: \"duration\",\n      align: \"center\",\n    },\n    {\n      title: \"Fin\",\n      dataIndex: \"finish\",\n      key: \"finish\",\n      align: \"center\",\n    },\n    {\n      title: \"Restante\",\n      dataIndex: \"remaining\",\n      key: \"remaining\",\n      align: \"center\",\n      defaultSortOrder: \"ascend\",\n      sorter: sortBy.sortByRemainingTime,\n      render: (record) => CountdownCell(record),\n    },\n    {\n      title: \"Acciones\",\n      key: \"action\",\n      align: \"center\",\n      render: (record) => (\n        <ActionsContainer>\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            onClick={() => editRecord(record.id)}\n          >\n            Editar\n          </Button>\n          <Button\n            type=\"danger\"\n            size=\"large\"\n            onClick={() => deleteRecord(record.id)}\n          >\n            Eliminar\n          </Button>\n        </ActionsContainer>\n      ),\n    },\n  ];\n  return (\n    <Container>\n      <ADTable dataSource={dataSource} columns={COLUMNS} />\n    </Container>\n  )\n};\n\nconst ActionsContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\nconst Container = styled.div`\n  margin-top: 24px;\n`;\n","import { Modal as ADModal } from \"antd\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"./Button\";\nimport { Divider } from \"antd\";\n\nexport const Help = ({ visible, onCancel }) => {\n  return (\n    <ADModal\n      title={<Title>Ayuda</Title>}\n      visible={visible}\n      footer={null}\n      width={920}\n      closable={false}\n    >\n      El objetivo de esta aplicación es poder monitorizar bombones o botellas de\n      oxígeno y poder controlar el tiempo de uso de cada una. Este tiempo de uso\n      se calcula en función de algunos parámetros, como son, la presión a la que\n      quiero aplicar el oxígeno, el volumen de la bombona y el caudal.\n      <br />\n      <br />\n      <Wrapper>\n        <h2>¿Cómo funciona?</h2>\n        <h3>Añadir un registro(paciente)</h3>\n        <ol>\n          <li>\n            1. Pulsar sobre botón <strong>\"Añadir paciente\"</strong> situado en\n            la esquina superior derecha del panel principal.\n          </li>\n          <li>\n            2. Se desplegará un formulario donde debes añadir los datos para\n            monitonizar un bombona en concreto.\n          </li>\n          <li>\n            3. Recuerda introducir los datos en la unidades correctas:\n            <ul>\n              <li>\n                - Unidad de presión: <strong>bar</strong>\n              </li>\n              <li>\n                - Unidad de volumen: <strong>litros</strong>\n              </li>\n              <li>\n                - Unidad de caudal: <strong>litros/minuto</strong>\n              </li>\n            </ul>\n          </li>\n        </ol>\n        <h3>Eliminar registro</h3>\n        <ol>\n          <li>\n            1. Pulsar sobre el botón <strong>\"Eliminar\"</strong> del registro en\n            concreto que quieres eliminar.\n          </li>\n          <li>2. Se desplegará un model de confirmación.</li>\n          <li>3. Pulsa \"Eliminar\"</li>\n        </ol>\n        <h3>Actualizar registro registro</h3>\n        <ol>\n          <li>\n            1. Pulsar sobre el botón <strong>\"Editar\"</strong> del registro en\n            concreto que quieres actualizar.{\" \"}\n          </li>\n          <li>2. Se desplegará de nuevo el formulario.</li>\n          <li>3. Modifica el campo del formulario que quieras actualizar</li>\n          <li>4. Pulsa \"Actualizar\"</li>\n        </ol>\n        <h3>Ordenar registros</h3>\n        Los registros estań ordenados en funcioń del tiempo restante y en\n        sentido ascendente por defecto. Esto quiere decir que se colocarán\n        primero los registros cuyas bombonas o botellas de oxígeno están próxima\n        a acabarse. Puedes cambiar el orden de los registros por{\" \"}\n        <strong>Nombre</strong>, <strong>Nº de cama</strong>,{\" \"}\n        <strong>Hora de inicio</strong> y <strong>Tiempo restante</strong>,\n        pulsando sobre el nombre del campo.\n        <br />\n        <br />\n        <h3>Filtrar registros</h3>\n        Existe la posibilidad de filtrar por <strong>Nombre</strong> y{\" \"}\n        <strong>Nº de cama</strong>. Esto nos permite buscar un registro\n        (paciente o cama) en concreto.\n        <br />\n        Para eso pulsa en el icono de <strong>lupa</strong> que existe en el\n        nombre de los respectivos campos.\n      </Wrapper>\n      <Divider />\n      <Footer>\n        <Button type=\"primary\" size=\"large\" onClick={onCancel}>\n          Cerrar\n        </Button>\n      </Footer>\n    </ADModal>\n  );\n};\n\nconst Wrapper = styled.div`\n  max-height: 500px;\n  padding-right: 50px;\n  overflow-y: scroll;\n`;\nconst Footer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\nconst Title = styled.div`\n  display: flex;\n  align-content: center;\n  padding:5px;\n  font-size: 28px;\n  font-weight: 500;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { QuestionOutlined } from \"@ant-design/icons\";\nexport const HelpIcon = ({onClick}) => {\n\n  return <Container onClick={onClick}><QuestionOutlined /></Container>;\n};\n\nconst Container = styled.div`\n  height: 30px;\n  width: 30px;\n  margin-left: 10px;\n  color: #1890ff;\n  text-align: center;\n  font-size: 18px;\n  border: solid 2px #1890ff;\n  border-radius: 500px;\n`;\n","\nimport styled from \"styled-components\";\n\nexport const Container = styled.div`\npadding: 1rem 3rem;\n`;\n\nexport const Title = styled.span`\ncolor: #1890ff;\nfont-weight: bold;\nfont-size: 56px;\nline-height: 64px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport \"moment/locale/es\";\nimport * as service from \"../../core/service\";\nimport * as calculate from \"../assets/js/calculate\";\nimport { Divider } from \"antd\";\nimport { Button } from \"../components/Button\";\nimport { Clock } from \"../components/Clock\";\nimport { Col } from \"../components/grid/Col\";\nimport { Row } from \"../components/grid/Row\";\nimport { Modal } from \"../components/Modal\";\nimport { Alert } from \"../components/Alert\";\nimport { Table } from \"../components/Table\";\nimport { Help } from \"../components/Help\";\nimport { HelpIcon } from \"../components/HelpIcon\";\nimport { Title, Container } from \"./App.styles\";\nimport \"../theme/App.css\";\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [recordInfo, setRecordInfo] = useState(undefined);\n  const [idDelete, setIdDelete] = useState(undefined);\n  const [idUpdate, setIdUpdate] = useState(undefined);\n  const [isModalOpen, toggleModalOpen] = useState(false);\n  const [isModalHelp, toggleModalHelp] = useState(false);\n  const [isAlertOpen, toggleAlertOpen] = useState(false);\n  const [currentFilterValueName, setCurrentFilterValueName] = useState(\"\");\n  const [currentFilterValueBed, setCurrentFilterValueBed] = useState();\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      loadRecords();\n    }, 60000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  useEffect(() => {\n    loadRecords();\n  }, []);\n\n  useEffect(() => {\n    const filterData = data.filter((entry) =>\n      entry.name.includes(currentFilterValueName)\n    );\n\n    filterData ? setFilteredData(filterData) : setFilteredData(data);\n  }, [currentFilterValueName, data]);\n\n  useEffect(() => {\n    const filterData = data.filter(\n      (entry) => entry.bed === parseInt(currentFilterValueBed)\n    );\n\n    filterData.length ? setFilteredData(filterData) : setFilteredData(data);\n  }, [currentFilterValueBed, data]);\n\n  const onChangeFilterName = (e) => {\n    setCurrentFilterValueName(e.target.value);\n  };\n  const onChangeFilterBed = (e) => {\n    setCurrentFilterValueBed(e.target.value);\n  };\n  return (\n    <Container>\n      <Row justify={\"end\"}>\n        <Clock />\n        <HelpIcon onClick={openHelp} />\n        <Help visible={isModalHelp} onCancel={() => closeHelp()} />\n      </Row>\n      <Divider />\n      <Row justify={\"start\"}>\n        <Col span={5}>\n          <Title>Crono</Title>\n        </Col>\n      </Row>\n\n      <Row justify={\"end\"}>\n        <Button type=\"primary\" size=\"large\" onClick={() => openModal()}>\n          Añadir un paciente\n        </Button>\n      </Row>\n      <Modal\n        data={recordInfo}\n        visible={isModalOpen}\n        onCancel={() => closeModal()}\n        onCreate={onCreate}\n        onUpdate={onUpdate}\n      />\n      <Alert\n        visible={isAlertOpen}\n        onCancel={() => closeAlert()}\n        onDelete={deleteRecord}\n      />\n      <Table\n        currentFilterValueName={currentFilterValueName}\n        currentFilterValueBed={currentFilterValueBed}\n        onChangeFilterName={onChangeFilterName}\n        onChangeFilterBed={onChangeFilterBed}\n        dataSource={filteredData}\n        editRecord={getRecord}\n        deleteRecord={openAlert}\n      />\n    </Container>\n  );\n\n  function openHelp() {\n    toggleModalHelp(true);\n  }\n  function closeHelp() {\n    toggleModalHelp(false);\n  }\n\n  function openModal() {\n    toggleModalOpen(true);\n  }\n\n  function closeModal() {\n    setRecordInfo();\n    toggleModalOpen(false);\n  }\n\n  function openAlert(id) {\n    setIdDelete(id);\n    toggleAlertOpen(true);\n  }\n\n  function closeAlert() {\n    setIdDelete(undefined);\n    toggleAlertOpen(false);\n  }\n\n  async function loadRecords() {\n    const result = await service.getAllRecords();\n    const calculateData = calculate.calculate(result);\n    setData(calculateData);\n    setFilteredData(calculateData);\n  }\n\n  async function getRecord(id) {\n    setIdUpdate(id);\n    const result = await service.getRecord(id);\n    setRecordInfo(result);\n    openModal();\n  }\n\n  async function onCreate(values) {\n    await service.addRecord(values);\n    loadRecords();\n    closeModal();\n  }\n\n  async function onUpdate(values) {\n    await service.updateRecord(idUpdate, values);\n    setIdUpdate(undefined);\n    setRecordInfo();\n    loadRecords();\n    closeModal();\n  }\n\n  async function deleteRecord() {\n    await service.deleteRecord(idDelete);\n    loadRecords();\n    closeAlert();\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./ui/views/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ConfigProvider } from 'antd';\nimport esES from 'antd/es/locale/es_ES';\n\nReactDOM.render(\n  <>\n    <ConfigProvider locale={esES}>\n      <App />\n    </ConfigProvider>\n  </>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}